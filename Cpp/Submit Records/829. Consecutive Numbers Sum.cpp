/********************************************
作者:Alfeim
题目:连续整数求和
时间消耗:4ms
解题思路:

假设某个数(N)等于连续i个数之和,让我们讨论以下情况

1.i是奇数：此时只有当且仅当 N是i的整数倍时方可存在,因为对于奇数长度的连续数组,其必存在一个中位数,恰好等于数组的收项之和的一半,
那么也就是说这个连续数组的平均数实际就是中位数,而其和也恰好为N,所以N必定能整出i；

比如 ： N = 15，i = 3，此时有15/3 = 5，也就是说中位数是5，那么另外两个数则是4和6(左边-1，右边+1)

2.i是偶数: 此时只有当且仅当N 对 i取余的结果是 i的一半时才能够存在； 如何证明呢？

我们不难看出，如果i是偶数的话,这个连续数组也就不存在所谓的中位数了,但是如果我们如果“遮住”最后一个数，那么是不是就存在新的中位数了呢？

比如说N = 10， i = 4 （1 + 2 + 3 + 4）,则该中位数为向下取整的平均值 即 10 / 4 = 2；显然 对于 1 、 2 、 3这三个数，平均数确实为2，
如果把4重新加回来，我们可以看到，实际上这时候平均值是超过2的，而多出来的这部分平均值之和实际上也就等于尾数减去“向下取整的平均数”
（即 4 - 2 = 2），实际也就是位数和“中位数”的距离，刚好等于数组长度的一半，所以可以推广到任何偶数形式。只有当N对i取余，且余数恰好
为i的一半时才能存在这样的连续数组

********************************************/
class Solution {
public:
    int consecutiveNumbersSum(int N) {
        int border = 1;
        int res = 1;
        while(border*(1+border) < 2*N) border++;
        
        for(int i = 2 ; i <= border ; ++i){
            if( i % 2 == 0){
               if(N % i == i/2) res++;
            }else{
                if( N % i == 0) res++;    
            }
            
        }
        
        return res;
        
    }
};
