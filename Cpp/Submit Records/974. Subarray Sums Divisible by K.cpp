/********************************************
作者:Alfeim
题目:和可以被K整除的子数组
时间消耗:12ms
解题思路:

我们可以先求出前缀和

然后用哈希表记录每个前缀和(对K取模)的个数

那么对于每个前缀和,任意选出其中两个，那么这两个前缀和对应的连续数组的差分数组，实际上就是满足和可以对K取整的数组(因为
这段差分数组对K取模为0)，所以我们只需要利用排列组合的公式即可求出每个前缀和对应有多少个差分数组能使得和可被K取整。

比如对于数组4，5，0，-2，-3，1
其前缀和数组为0，4，9，9，7，4，5(第一个数之前的前缀和为0)

F(x)表示前缀和为x的数组有多少个

比如F(0) = 2,分别为[0:1]和[0:6],那么显然其对应的差分数组只有唯一一个即[1:6],由于[0:1]和[0:6]对K取模的值相等，所以[1:6]对
K取模必为0

同理，F(4) = 4，分别为[0:1],[0:2],[0:3],[0:5],显然根据排列组合公式一共存在C(4,2) = 4 * 3 /2 = 6种组合

********************************************/

class Solution {
public:
    int subarraysDivByK(vector<int>& A, int K) {
        unordered_map<int,int> counts;
        int n = A.size();
        int res = 0;
        
        vector<int> dp(n+1,0);
        
        for(int i = 0 ; i < n ; ++i) dp[i+1] = A[i] + dp[i];
        
        for(auto i : dp){
            counts[ (i % K + K)%K ]++;
        }
        
        
        for(auto i : counts){
            res += i.second*(i.second - 1)/2;
        }
        
        return res;
        
        
        
        
        
    }
};
